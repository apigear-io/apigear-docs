"use strict";(self.webpackChunkapigear=self.webpackChunkapigear||[]).push([[8e3],{34126:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>h,frontMatter:()=>i,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"sdk/python-sdk","title":"Python SDK Template","description":"The Python template generates a python module based on the module name and exposes clean interfaces based on the module interface inside an API module. A core API which contain the single source of truth and a module code which is created as scaffolding code. For each interface a test file is also created.","source":"@site/docs/sdk/python-sdk.md","sourceDirName":"sdk","slug":"/sdk/python-sdk","permalink":"/docs/sdk/python-sdk","draft":false,"unlisted":false,"editUrl":"https://github.com/apigear-io/apigear-docs/edit/main/docs/sdk/python-sdk.md","tags":[],"version":"current","lastUpdatedAt":1675172564000,"sidebarPosition":4,"frontMatter":{"sidebar_position":4},"sidebar":"docsSidebar","previous":{"title":"Qt C++ SDK Template","permalink":"/docs/sdk/qtcpp-sdk"},"next":{"title":"Golang SDK Template","permalink":"/docs/sdk/go-sdk"}}');var a=t(74848),r=t(28453);const i={sidebar_position:4},o="Python SDK Template",d={},l=[{value:"Interfaces",id:"interfaces",level:2},{value:"Data Structures",id:"data-structures",level:2},{value:"Enumerations",id:"enumerations",level:2}];function c(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"python-sdk-template",children:"Python SDK Template"})}),"\n",(0,a.jsx)(n.p,{children:"The Python template generates a python module based on the module name and exposes clean interfaces based on the module interface inside an API module. A core API which contain the single source of truth and a module code which is created as scaffolding code. For each interface a test file is also created."}),"\n",(0,a.jsx)(n.p,{children:"The Python module allows to be extended and implemented based on the API core and inside the scaffolding files."}),"\n",(0,a.jsx)(n.p,{children:"Following template feature switches are supported:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"API - Only creates the interface files for you"}),"\n",(0,a.jsx)(n.li,{children:"Scaffold - Creates a full project with reference implementation and build system support."}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:["In the generated source code you will find a ",(0,a.jsx)(n.code,{children:"README"})," which explain in great detail how to build and use the code."]}),"\n",(0,a.jsx)(n.h1,{id:"api",children:"API"}),"\n",(0,a.jsx)(n.h2,{id:"interfaces",children:"Interfaces"}),"\n",(0,a.jsx)(n.p,{children:"An interface like this counter will be directly transformed to an abstract class."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"interfaces:\n  - name: Counter\n    properties:\n      - name: count\n        type: int\n    operations:\n      - name: increment\n"})}),"\n",(0,a.jsx)(n.p,{children:"The class will then later be used to be implemented by the customer."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-py",children:"class ICounter:\n    @property\n    def count(self):\n        raise NotImplementedError\n\n    def increment(self):\n        raise NotImplementedError\n"})}),"\n",(0,a.jsx)(n.h2,{id:"data-structures",children:"Data Structures"}),"\n",(0,a.jsx)(n.p,{children:"A data structure like this message which contains one field, called text is transformed into a class with public fields."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"structs:\n  - name: Message\n    fields:\n      - name: text\n        type: string\n"})}),"\n",(0,a.jsx)(n.p,{children:"A data structure is transformed to a python class. As these API structs shall be able to be used outside of the module the fields are public."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-py",children:"class Message:\n    def __init__(self):\n        self.text : str = str()\n"})}),"\n",(0,a.jsx)(n.h2,{id:"enumerations",children:"Enumerations"}),"\n",(0,a.jsx)(n.p,{children:"A enumeration will be transformed to a set of constants."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"enums:\n  - name: Direction\n    members:\n      - name: Up\n      - name: Down\n      - name: Left\n      - name: Right\n"})}),"\n",(0,a.jsx)(n.p,{children:"This is transformed to"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-py",children:"from enum import Enum\n\nclass Direction(Enum):\n    Up = 0\n    Down = 1\n    Left = 2\n    Right = 3\n\n"})})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>o});var s=t(96540);const a={},r=s.createContext(a);function i(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);