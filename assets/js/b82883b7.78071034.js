"use strict";(self.webpackChunkapigear=self.webpackChunkapigear||[]).push([[5077],{1725:(e,i,t)=>{t.r(i),t.d(i,{assets:()=>d,contentTitle:()=>r,default:()=>u,frontMatter:()=>o,metadata:()=>c,toc:()=>a});var n=t(4848),s=t(8453);const o={sidebar_position:1},r="Introduction",c={id:"objectapi/intro",title:"Introduction",description:"ObjectAPI is an interface specification to describe the boundaries of your software modules in an object format.",source:"@site/docs/objectapi/intro.md",sourceDirName:"objectapi",slug:"/objectapi/intro",permalink:"/docs/objectapi/intro",draft:!1,unlisted:!1,editUrl:"https://github.com/apigear-io/apigear-docs/edit/main/docs/objectapi/intro.md",tags:[],version:"current",lastUpdatedAt:1727808477e3,sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"docsSidebar",previous:{title:"Typescript SDK Template",permalink:"/docs/sdk/typescript-sdk"},next:{title:"API Foundation",permalink:"/docs/objectapi/core"}},d={},a=[{value:"Version 0.1.0",id:"version-010",level:4},{value:"Introduction",id:"introduction-1",level:2},{value:"Revision History",id:"revision-history",level:2},{value:"Version 0.2",id:"version-02",level:3},{value:"Definitions",id:"definitions",level:2}];function l(e){const i={a:"a",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(i.header,{children:(0,n.jsx)(i.h1,{id:"introduction",children:"Introduction"})}),"\n",(0,n.jsx)(i.p,{children:"ObjectAPI is an interface specification to describe the boundaries of your software modules in an object format."}),"\n",(0,n.jsx)(i.p,{children:"ObjectAPI sees the world as a set of object interfaces organizes in module. A module is encapsulated in one ObjectAPI document."}),"\n",(0,n.jsx)(i.p,{children:"The specification describes the details how to write such a ObjectAPI document."}),"\n",(0,n.jsx)(i.h4,{id:"version-010",children:"Version 0.1.0"}),"\n",(0,n.jsxs)(i.p,{children:['The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in ',(0,n.jsx)(i.a,{href:"http://www.ietf.org/rfc/rfc2119.txt",children:"RFC 2119"}),"."]}),"\n",(0,n.jsx)(i.p,{children:"The ObjectAPI Specification is copyrighted by ApiGear UG, all rights reserved."}),"\n",(0,n.jsx)(i.h2,{id:"introduction-1",children:"Introduction"}),"\n",(0,n.jsx)(i.p,{children:"The ObjectAPI specification is a project used to describe and document object oriented APIs across languages and technologies."}),"\n",(0,n.jsx)(i.p,{children:"The ObjectAPI specification defines a set of files required to describe such an API.\nThese files can then be used to create utilities, such as documentation, integration and/or testing tools."}),"\n",(0,n.jsx)(i.p,{children:"The ObjectAPI Specification is often used to describe the interface between software modules or inter-process communication (IPC) in distributed systems built using a object oriented programming API. The ObjectAPI recommends to split APIs into smaller modules with loose coupling."}),"\n",(0,n.jsx)(i.p,{children:"The documents describe an API module and its interfaces and data structures."}),"\n",(0,n.jsx)(i.h2,{id:"revision-history",children:"Revision History"}),"\n",(0,n.jsx)(i.h3,{id:"version-02",children:"Version 0.2"}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsx)(i.li,{children:"Initial ObjectAPI specification"}),"\n",(0,n.jsx)(i.li,{children:"Simplified the ObjectAPI document format"}),"\n"]}),"\n",(0,n.jsx)(i.h2,{id:"definitions",children:"Definitions"}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.strong,{children:"System"})," : A system is a collection of modules, which describe a coherent set of APIs on the same layer."]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.strong,{children:"Module"})," : A module describes a name spaced collection of API symbols, such as interfaces, structures, enumerations. There exists one module per file."]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.strong,{children:"Interface"}),": A interface is a description of a named object with properties, operations and signals."]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.strong,{children:"Structure"}),": A structure is a data type with fields describing the data structure. A structure has no operations or signals."]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.strong,{children:"Enumeration"}),": An enumeration is a enumerated integer type with a set of named values."]}),"\n"]})]})}function u(e={}){const{wrapper:i}={...(0,s.R)(),...e.components};return i?(0,n.jsx)(i,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}},8453:(e,i,t)=>{t.d(i,{R:()=>r,x:()=>c});var n=t(6540);const s={},o=n.createContext(s);function r(e){const i=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function c(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),n.createElement(o.Provider,{value:i},e.children)}}}]);