"use strict";(self.webpackChunkapigear=self.webpackChunkapigear||[]).push([[2195],{24994:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>l,frontMatter:()=>r,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"advanced/protocols/http/mapping_http","title":"HTTP Mapping","description":"ObjectAPI binds to HTTP using an RPC model. We find that describiung an API using an RPC model is much simpler for users than thinking about REST resources.","source":"@site/docs/advanced/protocols/http/mapping_http.md","sourceDirName":"advanced/protocols/http","slug":"/advanced/protocols/http/mapping_http","permalink":"/docs/advanced/protocols/http/mapping_http","draft":false,"unlisted":false,"editUrl":"https://github.com/apigear-io/apigear-docs/edit/main/docs/advanced/protocols/http/mapping_http.md","tags":[],"version":"current","lastUpdatedAt":1727808477000,"sidebarPosition":8,"frontMatter":{"sidebar_position":8},"sidebar":"docsSidebar","previous":{"title":"Error Messages","permalink":"/docs/advanced/protocols/objectlink/errors"},"next":{"title":"Community","permalink":"/docs/community/help"}}');var s=t(74848),o=t(28453);const r={sidebar_position:8},a="HTTP Mapping",c={},d=[{value:"ObjectAPI Mapping",id:"objectapi-mapping",level:2}];function p(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"http-mapping",children:"HTTP Mapping"})}),"\n",(0,s.jsx)(n.p,{children:"ObjectAPI binds to HTTP using an RPC model. We find that describiung an API using an RPC model is much simpler for users than thinking about REST resources."}),"\n",(0,s.jsx)(n.p,{children:"ObjectAPI consist of modules, interfaces and properties, operations and signals."}),"\n",(0,s.jsx)(n.p,{children:"Due to the nature of HTTP being a uni-directional protocol,we can not simply model the bid-directional nature of an object communication over to HTTP. Especially the property updates and signals are difficult to map to HTTP actions."}),"\n",(0,s.jsx)(n.admonition,{title:"Experimental",type:"warning",children:(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.strong,{children:"HTTP"})," mapping is experimental and not all templates support this feature."]})}),"\n",(0,s.jsx)(n.h2,{id:"objectapi-mapping",children:"ObjectAPI Mapping"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"module"}),": Is a namespace and does not map directly."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"interface"}),": ",(0,s.jsx)(n.code,{children:"/${module}/${interface}"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"GET"})," fetches the state of the interface"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"POST"})," sets the interface state"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"PATCH"})," partial update of the interface state"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"operation"}),": ",(0,s.jsx)(n.code,{children:"/${module}/${interface}/${operation}"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"POST"})," invokes the operation and returns the response"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Structure are mapped like the normal JSON mapping of ObjectAPI data types. Same applies to enumerations."})]})}function l(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(p,{...e})}):p(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>a});var i=t(96540);const s={},o=i.createContext(s);function r(e){const n=i.useContext(o);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);