"use strict";(self.webpackChunkapigear=self.webpackChunkapigear||[]).push([[202],{28453:(e,o,t)=>{t.d(o,{R:()=>s,x:()=>a});var n=t(96540);const i={},r=n.createContext(i);function s(e){const o=n.useContext(r);return n.useMemo(function(){return"function"==typeof e?e(o):{...o,...e}},[o,e])}function a(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),n.createElement(r.Provider,{value:o},e.children)}},87792:(e,o,t)=>{t.r(o),t.d(o,{assets:()=>l,contentTitle:()=>a,default:()=>m,frontMatter:()=>s,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"tools/cli/monitor","title":"API Monitoring","description":"API Monitoring is a feature that allows you to monitor the behavior of an API. This is useful for testing, demonstration, and development. It decouples the interface implementation from the interface users.","source":"@site/docs/tools/cli/monitor.md","sourceDirName":"tools/cli","slug":"/tools/cli/monitor","permalink":"/docs/tools/cli/monitor","draft":false,"unlisted":false,"editUrl":"https://github.com/apigear-io/apigear-docs/edit/main/docs/tools/cli/monitor.md","tags":[],"version":"current","lastUpdatedAt":1728043886000,"sidebarPosition":4,"frontMatter":{"sidebar_position":4,"label":"API Monitoring (experimental)"},"sidebar":"docsSidebar","previous":{"title":"API Simulation and Stimulation","permalink":"/docs/tools/cli/simulate"},"next":{"title":"ObjectLink REPL","permalink":"/docs/tools/cli/olink"}}');var i=t(74848),r=t(28453);const s={sidebar_position:4,label:"API Monitoring (experimental)"},a="API Monitoring",l={},c=[{value:"Quick API Monitoring",id:"quick-api-monitoring",level:2}];function d(e){const o={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",strong:"strong",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(o.header,{children:(0,i.jsx)(o.h1,{id:"api-monitoring",children:"API Monitoring"})}),"\n",(0,i.jsx)(o.p,{children:"API Monitoring is a feature that allows you to monitor the behavior of an API. This is useful for testing, demonstration, and development. It decouples the interface implementation from the interface users."}),"\n",(0,i.jsx)(o.admonition,{title:"Experimental",type:"warning",children:(0,i.jsxs)(o.p,{children:["The ",(0,i.jsx)(o.strong,{children:"monitoring"})," is experimental and not all templates support this feature."]})}),"\n",(0,i.jsxs)(o.p,{children:["Make sure you are generating ",(0,i.jsx)(o.code,{children:"monitor"})," feature, and wrap your implementation with it.",(0,i.jsx)("br",{}),"\nFor more information about this feature check ",(0,i.jsx)(o.a,{href:"/docs/advanced/monitor/intro",children:"monitor documentation"}),"."]}),"\n",(0,i.jsx)(o.h2,{id:"quick-api-monitoring",children:"Quick API Monitoring"}),"\n",(0,i.jsxs)(o.p,{children:["API Monitoring is a feature of the ApiGear platform. It allows to monitor the traffic of an API. The ",(0,i.jsx)(o.code,{children:"apigear"})," command line tool can be used to monitor an API. The following example shows how to monitor the demo API."]}),"\n",(0,i.jsx)(o.pre,{children:(0,i.jsx)(o.code,{className:"language-bash",children:"apigear monitor run\n"})}),"\n",(0,i.jsxs)(o.p,{children:['This will start the API monitoring server. By default the server will listen on "127.0.0.1:5555" address. To change the it use the ',(0,i.jsx)(o.code,{children:"--addr"})," option with address and port of your choice."]}),"\n",(0,i.jsx)(o.p,{children:"The monitoring server will listen for API calls. Normally the API events will come from a running API client."})]})}function m(e={}){const{wrapper:o}={...(0,r.R)(),...e.components};return o?(0,i.jsx)(o,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}}}]);