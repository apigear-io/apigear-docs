"use strict";(self.webpackChunkapigear=self.webpackChunkapigear||[]).push([[1393],{11470:(e,t,n)=>{n.d(t,{A:()=>w});var l=n(96540),a=n(34164),i=n(23104),r=n(56347),o=n(205),s=n(57485),c=n(31682),d=n(70679);function h(e){return l.Children.toArray(e).filter(e=>"\n"!==e).map(e=>{if(!e||(0,l.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})?.filter(Boolean)??[]}function u(e){const{values:t,children:n}=e;return(0,l.useMemo)(()=>{const e=t??function(e){return h(e).map(({props:{value:e,label:t,attributes:n,default:l}})=>({value:e,label:t,attributes:n,default:l}))}(n);return function(e){const t=(0,c.XI)(e,(e,t)=>e.value===t.value);if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map(e=>e.value).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e},[t,n])}function p({value:e,tabValues:t}){return t.some(t=>t.value===e)}function m({queryString:e=!1,groupId:t}){const n=(0,r.W6)(),a=function({queryString:e=!1,groupId:t}){if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:e,groupId:t});return[(0,s.aZ)(a),(0,l.useCallback)(e=>{if(!a)return;const t=new URLSearchParams(n.location.search);t.set(a,e),n.replace({...n.location,search:t.toString()})},[a,n])]}function g(e){const{defaultValue:t,queryString:n=!1,groupId:a}=e,i=u(e),[r,s]=(0,l.useState)(()=>function({defaultValue:e,tabValues:t}){if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!p({value:e,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${t.map(e=>e.value).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}const n=t.find(e=>e.default)??t[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:t,tabValues:i})),[c,h]=m({queryString:n,groupId:a}),[g,x]=function({groupId:e}){const t=function(e){return e?`docusaurus.tab.${e}`:null}(e),[n,a]=(0,d.Dv)(t);return[n,(0,l.useCallback)(e=>{t&&a.set(e)},[t,a])]}({groupId:a}),j=(()=>{const e=c??g;return p({value:e,tabValues:i})?e:null})();(0,o.A)(()=>{j&&s(j)},[j]);return{selectedValue:r,selectValue:(0,l.useCallback)(e=>{if(!p({value:e,tabValues:i}))throw new Error(`Can't select invalid tab value=${e}`);s(e),h(e),x(e)},[h,x,i]),tabValues:i}}var x=n(92303);const j={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var f=n(74848);function b({className:e,block:t,selectedValue:n,selectValue:l,tabValues:r}){const o=[],{blockElementScrollPositionUntilNextRender:s}=(0,i.a_)(),c=e=>{const t=e.currentTarget,a=o.indexOf(t),i=r[a].value;i!==n&&(s(t),l(i))},d=e=>{let t=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const n=o.indexOf(e.currentTarget)+1;t=o[n]??o[0];break}case"ArrowLeft":{const n=o.indexOf(e.currentTarget)-1;t=o[n]??o[o.length-1];break}}t?.focus()};return(0,f.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,a.A)("tabs",{"tabs--block":t},e),children:r.map(({value:e,label:t,attributes:l})=>(0,f.jsx)("li",{role:"tab",tabIndex:n===e?0:-1,"aria-selected":n===e,ref:e=>{o.push(e)},onKeyDown:d,onClick:c,...l,className:(0,a.A)("tabs__item",j.tabItem,l?.className,{"tabs__item--active":n===e}),children:t??e},e))})}function v({lazy:e,children:t,selectedValue:n}){const i=(Array.isArray(t)?t:[t]).filter(Boolean);if(e){const e=i.find(e=>e.props.value===n);return e?(0,l.cloneElement)(e,{className:(0,a.A)("margin-top--md",e.props.className)}):null}return(0,f.jsx)("div",{className:"margin-top--md",children:i.map((e,t)=>(0,l.cloneElement)(e,{key:t,hidden:e.props.value!==n}))})}function y(e){const t=g(e);return(0,f.jsxs)("div",{className:(0,a.A)("tabs-container",j.tabList),children:[(0,f.jsx)(b,{...t,...e}),(0,f.jsx)(v,{...t,...e})]})}function w(e){const t=(0,x.A)();return(0,f.jsx)(y,{...e,children:h(e.children)},String(t))}},19365:(e,t,n)=>{n.d(t,{A:()=>r});n(96540);var l=n(34164);const a={tabItem:"tabItem_Ymn6"};var i=n(74848);function r({children:e,hidden:t,className:n}){return(0,i.jsx)("div",{role:"tabpanel",className:(0,l.A)(a.tabItem,n),hidden:t,children:e})}},20251:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>c,default:()=>p,frontMatter:()=>s,metadata:()=>l,toc:()=>h});const l=JSON.parse('{"id":"quickstart/index","title":"Quick-Start","description":"The Quick-Start guide explains how to, in few steps, get from an API to a functional Unreal Engine plugin.","source":"@site/template-docs/template-unreal/docs/docs/quickstart/index.md","sourceDirName":"quickstart","slug":"/quickstart/","permalink":"/template-unreal/docs/quickstart/","draft":false,"unlisted":false,"editUrl":"https://github.com/apigear-io/template-unreal/edit/main/docs/docs/quickstart/index.md","tags":[],"version":"current","lastUpdatedAt":1727808127000,"sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"defaultSidebar","previous":{"title":"Template Unreal Engine","permalink":"/template-unreal/docs/intro"}}');var a=n(74848),i=n(28453),r=n(47242),o=n(53386);const s={sidebar_position:2},c="Quick-Start",d={},h=[...o.RM,{value:"5. How to use the plugin",id:"5-how-to-use-the-plugin",level:2},{value:"Project folder structure",id:"project-folder-structure",level:3},{value:"Blueprint",id:"blueprint",level:3},{value:"C++",id:"c",level:3}];function u(e){const t={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.header,{children:(0,a.jsx)(t.h1,{id:"quick-start",children:"Quick-Start"})}),"\n",(0,a.jsxs)(t.p,{children:["The Quick-Start guide explains how to, in few steps, get from an API to a functional ",(0,a.jsx)(t.em,{children:"Unreal Engine"})," plugin."]}),"\n",(0,a.jsx)(o.Ay,{}),"\n",(0,a.jsx)(t.h2,{id:"5-how-to-use-the-plugin",children:"5. How to use the plugin"}),"\n",(0,a.jsx)(t.h3,{id:"project-folder-structure",children:"Project folder structure"}),"\n",(0,a.jsxs)(t.p,{children:["For the code generation we assume that both ",(0,a.jsx)(t.em,{children:"ApiGear"})," files reside in an ",(0,a.jsx)(t.code,{children:"apigear"})," subfolder next to the ",(0,a.jsx)(t.em,{children:"Unreal Engine"})," project.\nIn this case the folder structure should look similar to this."]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-bash",children:"\ud83d\udce6ue_docs_example_project\n \u2523 \ud83d\udcc2apigear\n \u2503 \u2523 \ud83d\udcdchelloworld.solution.yaml\n \u2503 \u2517 \ud83d\udcdchelloworld.module.yaml\n \u2523 \ud83d\udcc2ue_docs\n \u2503 \u2523 \ud83d\udcc2Config\n \u2503 \u2523 \ud83d\udcc2Content\n \u2503 \u2523 \ud83d\udcc2Platforms\n # highlight-next-line\n \u2503 \u2523 \ud83d\udcc2Plugins\n \u2503 \u2523 \ud83d\udcc2Source\n \u2503 \u2517 \ud83d\udcdcue_docs.uproject\n"})}),"\n",(0,a.jsxs)(t.p,{children:["Using the the solution file from the previous paragraph the code will be generated in the ",(0,a.jsx)(t.code,{children:"ue_docs/Plugins"})," folder."]}),"\n",(0,a.jsxs)(t.p,{children:["The generated code can be used with ",(0,a.jsx)(t.em,{children:"Blueprints"})," and ",(0,a.jsx)(t.em,{children:"C++"}),". The following paragraphs show how this can be achieved.\nMake sure to have the generated plugin code in your projects plugins directory as noted in the ",(0,a.jsx)(t.a,{href:"#4-generate-code",children:"previous section"}),"."]}),"\n",(0,a.jsx)(t.h3,{id:"blueprint",children:"Blueprint"}),"\n",(0,a.jsxs)(t.p,{children:["Open your project in the Unreal Editor and choose a ",(0,a.jsx)(t.em,{children:"Blueprint"})," where you want to use the interface.\nIn this ",(0,a.jsx)(t.em,{children:"Blueprint"})," we first get the ",(0,a.jsx)(t.em,{children:"GameInstance"})," subsystem of the type ",(0,a.jsx)(t.em,{children:"Io World Hello"}),"."]}),"\n",(0,a.jsx)(r.A,{caption:"Get subsystem in blueprint",src:"/img/quick-start/quick-start-blueprint-get-subsystem.png"}),"\n",(0,a.jsxs)(t.p,{children:["On this subsystem we can choose the ",(0,a.jsx)(t.em,{children:"asynchronous say"})," function."]}),"\n",(0,a.jsx)(r.A,{caption:"Choose method on interface in blueprint",src:"/img/quick-start/quick-start-blueprint-choose-method.png"}),"\n",(0,a.jsx)(t.p,{children:'The complete setup to say "Hello world" on begin play.'}),"\n",(0,a.jsx)(r.A,{caption:"Hello interface example in blueprint",src:"/img/quick-start/quick-start-blueprint-complete.png"}),"\n",(0,a.jsx)(t.h3,{id:"c",children:"C++"}),"\n",(0,a.jsxs)(t.p,{children:["Since the generated interface is used outside of its own module, we have to add the module identifier to the list of dependency modules in the dependent module e.g. your project's or another plugin's module.\nTo do this, open the dependents module, e.g. ",(0,a.jsx)(t.code,{children:"ue_docs.Build.cs"}),", and add ",(0,a.jsx)(t.em,{children:"IoWorld"})," to the ",(0,a.jsx)(t.code,{children:"PublicDependencyModuleNames"}),". ",(0,a.jsx)(t.em,{children:"IoWorld"})," is the demo module's name in the example."]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-cs",metastring:'showLineNumbers title="ue_docs.Build.cs"',children:'PublicDependencyModuleNames.AddRange(new string[] { "Core", "CoreUObject", "Engine", "InputCore", "IoWorld" });\n'})}),"\n",(0,a.jsxs)(t.p,{children:["Afterwards, we can simply include the header files for the ",(0,a.jsx)(t.code,{children:"api"})," interface, the ",(0,a.jsx)(t.code,{children:"stub"})," implementation and use it."]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-cpp",metastring:'showLineNumbers title="ue_docsGameModeBase.cpp"',children:'#include "ue_docsGameModeBase.h"\n#include "Implementation/IoWorldHello.h"\n#include "Generated/api/IoWorld_data.h"\n#include "Generated/api/IoWorldHelloInterface.h"\n\nvoid Aue_docsGameModeBase::InitGame(const FString& MapName, const FString& Options, FString& ErrorMessage)\n{\n\tSuper::InitGame(MapName,Options, ErrorMessage);\n\n\tTScriptInterface<IIoWorldHelloInterface> HelloWorldObjPtr = GetGameInstance()->GetSubsystem<UIoWorldHello>();\n\tFIoWorldMessage MyMsg;\n\tMyMsg.content = FString("Hello world");\n\tHelloWorldObjPtr->Say(MyMsg, EIoWorldWhen::IWW_NOW);\n}\n'})})]})}function p(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(u,{...e})}):u(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>o});var l=n(96540);const a={},i=l.createContext(a);function r(e){const t=l.useContext(i);return l.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),l.createElement(i.Provider,{value:t},e.children)}},47242:(e,t,n)=>{n.d(t,{A:()=>i});n(96540);var l=n(86025),a=n(74848);function i({src:e,caption:t}){return(0,a.jsxs)("figure",{style:{padding:0},children:[(0,a.jsx)("img",{src:(0,l.Ay)(e),alt:t}),(0,a.jsx)("figcaption",{children:`Figure: ${t}`})]})}},53386:(e,t,n)=>{n.d(t,{Ay:()=>p,RM:()=>h});var l=n(74848),a=n(28453),i=n(11470),r=n(19365),o=(n(96540),n(28774));const s={buttons:"buttons_3CQa"};function c({link:e,message:t}){return(0,l.jsx)("div",{className:s.buttons,children:(0,l.jsx)(o.A,{className:"button button--primary button--lg",to:e,children:t})})}var d=n(47242);const h=[{value:"1. Install the Code Generator",id:"1-install-the-code-generator",level:2},{value:"Install ApiGear Studio",id:"install-apigear-studio",level:3},{value:"Install ApiGear CLI",id:"install-apigear-cli",level:3},{value:"2. Obtain the Template",id:"2-obtain-the-template",level:2},{value:"Installation via CLI",id:"installation-via-cli",level:3},{value:"Installation via Studio",id:"installation-via-studio",level:3},{value:"Cloning from GitHub",id:"cloning-from-github",level:3},{value:"3. Set Up the Project",id:"3-set-up-the-project",level:2},{value:"Solution File",id:"solution-file",level:3},{value:"API Module File",id:"api-module-file",level:3},{value:"4. Generate Code",id:"4-generate-code",level:2},{value:"Generate via CLI",id:"generate-via-cli",level:3},{value:"Generate via Studio",id:"generate-via-studio",level:3}];function u(e){const t={a:"a",admonition:"admonition",code:"code",em:"em",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components},{Details:n}=t;return n||function(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(t.h2,{id:"1-install-the-code-generator",children:"1. Install the Code Generator"}),"\n",(0,l.jsx)(t.p,{children:"ApiGear provides two powerful tools: a Studio and a Command Line Interface (CLI). The Studio is a graphical tool for creating, editing API modules and projects, while the CLI is a command-line tool for generating code from API modules. Both offer comprehensive functionality, including SDK template management, API project creation, code generation, API monitoring, and API simulation."}),"\n",(0,l.jsx)("div",{class:"container",children:(0,l.jsxs)("div",{class:"row",children:[(0,l.jsx)("div",{class:"col col--6",children:(0,l.jsx)(c,{message:"Download Studio",link:"https://github.com/apigear-io/studio/releases/latest"})}),(0,l.jsx)("div",{class:"col col--6",children:(0,l.jsx)(c,{message:"Download CLI",link:"https://github.com/apigear-io/cli/releases/latest"})})]})}),"\n",(0,l.jsx)(t.h3,{id:"install-apigear-studio",children:"Install ApiGear Studio"}),"\n",(0,l.jsxs)(t.p,{children:["ApiGear Studio is available for macOS, Windows, and Linux. You can download it from the ",(0,l.jsx)(t.a,{href:"https://github.com/apigear-io/studio/releases/latest",children:"ApiGear Studio GitHub releases page"}),"."]}),"\n",(0,l.jsxs)(t.p,{children:["For more detailed information on ApiGear Studio, refer to the dedicated ",(0,l.jsx)(t.a,{href:"/docs/tools/studio/intro",children:"studio documentation"}),"."]}),"\n",(0,l.jsx)(t.h3,{id:"install-apigear-cli",children:"Install ApiGear CLI"}),"\n",(0,l.jsxs)(t.p,{children:["The ApiGear CLI is a versatile command-line tool for generating code from API modules. It's available for macOS, Windows, and Linux. Download the latest version from the ",(0,l.jsx)(t.a,{href:"https://github.com/apigear-io/cli/releases/latest",children:"ApiGear CLI GitHub releases page"}),"."]}),"\n",(0,l.jsx)(t.p,{children:"The CLI offers all the features available in the Studio."}),"\n",(0,l.jsxs)(t.p,{children:["For more detailed information on the ApiGear CLI, consult the dedicated ",(0,l.jsx)(t.a,{href:"/docs/tools/cli/intro",children:"CLI documentation"}),"."]}),"\n",(0,l.jsx)(t.h2,{id:"2-obtain-the-template",children:"2. Obtain the Template"}),"\n",(0,l.jsx)(t.p,{children:"There are several methods to obtain the template: installation via the Studio, installation via the CLI, or cloning/downloading from GitHub."}),"\n",(0,l.jsx)(t.admonition,{title:"This step is optional",type:"tip",children:(0,l.jsxs)(t.p,{children:["The ApiGear Studio and the CLI detect the specified template in the ",(0,l.jsx)(t.a,{href:"#solution-file",children:"solution document"})," and install it automatically."]})}),"\n",(0,l.jsxs)(n,{children:[(0,l.jsx)("summary",{children:"Optional steps (click to expand)"}),(0,l.jsx)(t.h3,{id:"installation-via-cli",children:"Installation via CLI"}),(0,l.jsxs)(t.p,{children:["When using the CLI, only the highlighted line needs to be executed. You can verify the successful installation using the ",(0,l.jsx)(t.code,{children:"template cache"})," command."]}),(0,l.jsxs)(i.A,{groupId:"current-template",queryString:!0,children:[(0,l.jsx)(r.A,{value:"template-unreal",label:"Unreal Engine",children:(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-bash",children:"# highlight-next-line\n$ apigear template install apigear-io/template-unreal@v3.2.2\n$ apigear template cache\nlist of templates from the local cache\n\nsource                            | url                                               | installed | latest\napigear-io/template-unreal@v3.2.2 | https://github.com/apigear-io/template-unreal.git | <sha1>    | v3.2.2\n...\n"})})}),(0,l.jsx)(r.A,{value:"template-cpp14",label:"C++14",children:(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-bash",children:"# highlight-next-line\n$ apigear template install apigear-io/template-cpp14@v3.6.0\n$ apigear template cache\nlist of templates from the local cache\n\nsource                            | url                                               | installed | latest\napigear-io/template-cpp14@v3.6.0  | https://github.com/apigear-io/template-cpp14.git  | <sha1>    | v3.6.0\n...\n"})})}),(0,l.jsx)(r.A,{value:"template-qtcpp",label:"Qt6",children:(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-bash",children:"# highlight-next-line\n$ apigear template install apigear-io/template-qtcpp@v0.4.0\n$ apigear template cache\nlist of templates from the local cache\n\nsource                            | url                                               | installed | latest\napigear-io/template-qtcpp@v0.4.0  | https://github.com/apigear-io/template-qtcpp.git  | <sha1>    | v0.4.0\n...\n"})})}),(0,l.jsx)(r.A,{value:"template-python",label:"Python",children:(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-bash",children:"# highlight-next-line\n$ apigear template install apigear-io/template-python@v1.0.0\n$ apigear template cache\nlist of templates from the local cache\n\nsource                            | url                                               | installed | latest\napigear-io/template-python@v1.0.0 | https://github.com/apigear-io/template-python.git | <sha1>    | v1.0.0\n...\n"})})})]}),(0,l.jsx)(t.h3,{id:"installation-via-studio",children:"Installation via Studio"}),(0,l.jsx)(t.p,{children:"Installing the template through the Studio is straightforward:"}),(0,l.jsxs)(i.A,{groupId:"current-template",queryString:!0,children:[(0,l.jsx)(r.A,{value:"template-unreal",label:"Unreal Engine",children:(0,l.jsxs)(t.ol,{children:["\n",(0,l.jsx)(t.li,{children:"Open an existing project or create a new one"}),"\n",(0,l.jsxs)(t.li,{children:["Navigate to the ",(0,l.jsx)(t.code,{children:"Templates"})," tab"]}),"\n",(0,l.jsxs)(t.li,{children:["Click ",(0,l.jsx)(t.code,{children:"Install"})," on the ",(0,l.jsx)(t.code,{children:"apigear-io/template-unreal"})," entry"]}),"\n"]})}),(0,l.jsx)(r.A,{value:"template-cpp14",label:"C++14",children:(0,l.jsxs)(t.ol,{children:["\n",(0,l.jsx)(t.li,{children:"Open an existing project or create a new one"}),"\n",(0,l.jsxs)(t.li,{children:["Navigate to the ",(0,l.jsx)(t.code,{children:"Templates"})," tab"]}),"\n",(0,l.jsxs)(t.li,{children:["Click ",(0,l.jsx)(t.code,{children:"Install"})," on the ",(0,l.jsx)(t.code,{children:"apigear-io/template-cpp14"})," entry"]}),"\n"]})}),(0,l.jsx)(r.A,{value:"template-qtcpp",label:"Qt6",children:(0,l.jsxs)(t.ol,{children:["\n",(0,l.jsx)(t.li,{children:"Open an existing project or create a new one"}),"\n",(0,l.jsxs)(t.li,{children:["Navigate to the ",(0,l.jsx)(t.code,{children:"Templates"})," tab"]}),"\n",(0,l.jsxs)(t.li,{children:["Click ",(0,l.jsx)(t.code,{children:"Install"})," on the ",(0,l.jsx)(t.code,{children:"apigear-io/template-qtcpp"})," entry"]}),"\n"]})}),(0,l.jsx)(r.A,{value:"template-python",label:"Python",children:(0,l.jsxs)(t.ol,{children:["\n",(0,l.jsx)(t.li,{children:"Open an existing project or create a new one"}),"\n",(0,l.jsxs)(t.li,{children:["Navigate to the ",(0,l.jsx)(t.code,{children:"Templates"})," tab"]}),"\n",(0,l.jsxs)(t.li,{children:["Click ",(0,l.jsx)(t.code,{children:"Install"})," on the ",(0,l.jsx)(t.code,{children:"apigear-io/template-python"})," entry"]}),"\n"]})})]}),(0,l.jsx)(d.A,{caption:"Installing the template",src:"/img/apigear-studio-install-unreal-template.png"}),(0,l.jsx)(t.h3,{id:"cloning-from-github",children:"Cloning from GitHub"}),(0,l.jsx)(t.p,{children:"If you need to inspect or modify the template's source code, cloning or downloading the repository is recommended. The repository doesn't need to be part of your project and can be stored anywhere on your computer."}),(0,l.jsxs)(i.A,{groupId:"current-template",queryString:!0,children:[(0,l.jsx)(r.A,{value:"template-unreal",label:"Unreal Engine",children:(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-bash",children:"$ git clone https://github.com/apigear-io/template-unreal.git\n"})})}),(0,l.jsx)(r.A,{value:"template-cpp14",label:"C++14",children:(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-bash",children:"$ git clone https://github.com/apigear-io/template-cpp14.git\n"})})}),(0,l.jsx)(r.A,{value:"template-qtcpp",label:"Qt6",children:(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-bash",children:"$ git clone https://github.com/apigear-io/template-qtcpp.git\n"})})}),(0,l.jsx)(r.A,{value:"template-python",label:"Python",children:(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-bash",children:"$ git clone https://github.com/apigear-io/template-python.git\n"})})})]}),(0,l.jsx)(t.p,{children:"You can then configure the solution file to use your template by providing the relative path from the solution file to the template directory."})]}),"\n",(0,l.jsx)(t.h2,{id:"3-set-up-the-project",children:"3. Set Up the Project"}),"\n",(0,l.jsxs)(t.p,{children:["A typical project requires two files: a solution file specifying the APIs and the template to use, and at least one API module file. Ideally, both should be placed in a folder named ",(0,l.jsx)(t.code,{children:"apigear"}),", adjacent to each other."]}),"\n",(0,l.jsx)(t.p,{children:"Alternatively, you can use the Studio to create a new project and modify the two example files provided."}),"\n",(0,l.jsx)(t.h3,{id:"solution-file",children:"Solution File"}),"\n",(0,l.jsxs)(t.p,{children:["Create a ",(0,l.jsx)(t.a,{href:"/docs/guide/intro#creating-a-solution",children:"solution"})," file.\nThe example below specifies:"]}),"\n",(0,l.jsxs)(t.ul,{children:["\n",(0,l.jsxs)(t.li,{children:["Module files in ",(0,l.jsx)(t.em,{children:"line 8"}),", here the ",(0,l.jsx)(t.code,{children:"helloworld.module.yaml"})," module with the ",(0,l.jsx)(t.code,{children:"Hello"})," API"]}),"\n",(0,l.jsxs)(t.li,{children:["The output directory for generated files in ",(0,l.jsx)(t.em,{children:"line 9"})]}),"\n",(0,l.jsxs)(t.li,{children:["The template used to generate the code in ",(0,l.jsx)(t.em,{children:"line 10"})," (this can also be a path to a local copy of the template)"]}),"\n",(0,l.jsxs)(t.li,{children:["The enabled features of the template in ",(0,l.jsx)(t.em,{children:"line 13"}),", here the ",(0,l.jsx)(t.code,{children:"stubs"})," feature, which provides a simple implementation of interfaces."]}),"\n"]}),"\n",(0,l.jsxs)(i.A,{groupId:"current-template",queryString:!0,children:[(0,l.jsx)(r.A,{value:"template-unreal",label:"Unreal Engine",children:(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-yaml",metastring:'title="helloworld.solution.yaml" showLineNumbers',children:'schema: "apigear.solution/1.0"\nname: hello_world_example\nversion: "0.1.0"\n\ntargets:\n  - name: ue_docs\n    inputs:\n      - helloworld.module.yaml\n    output: ../ue_docs\n    template: apigear-io/template-unreal@v3.2.2\n    force: true\n    features:\n      - stubs\n'})})}),(0,l.jsx)(r.A,{value:"template-cpp14",label:"C++14",children:(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-yaml",metastring:'title="helloworld.solution.yaml" showLineNumbers',children:'schema: "apigear.solution/1.0"\nname: hello_world_example\nversion: "0.1.0"\n\ntargets:\n  - name: cpp_hello_world\n    inputs:\n      - helloworld.module.yaml\n    output: ../cpp_hello_world\n    template: apigear-io/template-cpp14@v3.6.0\n    force: true\n    features:\n      - stubs\n'})})}),(0,l.jsx)(r.A,{value:"template-qtcpp",label:"Qt6",children:(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-yaml",metastring:'title="helloworld.solution.yaml" showLineNumbers',children:'schema: "apigear.solution/1.0"\nname: hello_world_example\nversion: "0.1.0"\n\ntargets:\n  - name: qt_hello_world\n    inputs:\n      - helloworld.module.yaml\n    output: ../qt_hello_world\n    template: apigear-io/template-qtcpp@v0.4.0\n    force: true\n    features:\n      - stubs\n'})})}),(0,l.jsx)(r.A,{value:"template-python",label:"Python",children:(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-yaml",metastring:'title="helloworld.solution.yaml" showLineNumbers',children:'schema: "apigear.solution/1.0"\nname: hello_world_example\nversion: "0.1.0"\n\ntargets:\n  - name: hello_world\n    inputs:\n      - helloworld.module.yaml\n    output: ../py_hello_world\n    template: apigear-io/template-python@v1.0.0\n    force: true\n    features:\n      - stubs\n'})})})]}),"\n",(0,l.jsx)(t.admonition,{title:"Targets",type:"tip",children:(0,l.jsxs)(t.p,{children:["You can extend this solution file with additional targets, each for a different technology with a different template. The ",(0,l.jsx)(t.code,{children:"module.yaml"})," file is technology-independent and can be used with any template."]})}),"\n",(0,l.jsx)(t.admonition,{title:"Template Version",type:"tip",children:(0,l.jsx)(t.p,{children:"We highly recommend specifying the exact version of the template. Otherwise, a newer version will be automatically downloaded and used for code generation. This can lead to unexpected behavior if file structures or code changes in the template."})}),"\n",(0,l.jsx)(t.admonition,{type:"note",children:(0,l.jsxs)(t.p,{children:["Set the ",(0,l.jsx)(t.code,{children:"force"})," parameter to ",(0,l.jsx)(t.code,{children:"true"})," if you want to always override all generated files. When set to ",(0,l.jsx)(t.code,{children:"false"}),", some files, such as implementations (stub feature), won't be updated. API files are always updated regardless of this setting."]})}),"\n",(0,l.jsx)(t.h3,{id:"api-module-file",children:"API Module File"}),"\n",(0,l.jsxs)(t.p,{children:["Use your preferred text editor to create the ",(0,l.jsx)(t.code,{children:"helloworld.module.yaml"})," file with the following example content:"]}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-yaml",metastring:'title="helloworld.module.yaml" showLineNumbers',children:'schema: apigear.module/1.0\nname: io.world\nversion: "1.0.0"\n\ninterfaces:\n  - name: Hello\n    properties:\n      - { name: last, type: Message }\n    operations:\n      - name: say\n        params:\n          - { name: msg, type: Message }\n          - { name: when, type: When }\n        return:\n          type: int\n    signals:\n      - name: justSaid\n        params:\n          - { name: msg, type: Message }\nenums:\n  - name: When\n    members:\n      - { name: Now, value: 0 }\n      - { name: Soon, value: 1 }\n      - { name: Never, value: 2 }\nstructs:\n  - name: Message\n    fields:\n      - { name: content, type: string }\n'})}),"\n",(0,l.jsx)(t.h2,{id:"4-generate-code",children:"4. Generate Code"}),"\n",(0,l.jsx)(t.h3,{id:"generate-via-cli",children:"Generate via CLI"}),"\n",(0,l.jsx)(t.p,{children:"The following snippet demonstrates how to run the CLI and provides an example output:"}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-bash",children:"$ apigear generate solution apigear/helloworld.solution.yaml\n10:52:20 INF generated 21 files in 30ms. (20 write, 0 skip, 1 copy) topic=gen\n"})}),"\n",(0,l.jsxs)(t.ul,{children:["\n",(0,l.jsxs)(t.li,{children:["The ",(0,l.jsx)(t.code,{children:"generate"})," command instructs the CLI to generate code"]}),"\n",(0,l.jsxs)(t.li,{children:["The ",(0,l.jsx)(t.code,{children:"solution"})," parameter specifies that we want to process a solution file"]}),"\n"]}),"\n",(0,l.jsx)(t.h3,{id:"generate-via-studio",children:"Generate via Studio"}),"\n",(0,l.jsxs)(t.ol,{children:["\n",(0,l.jsx)(t.li,{children:"Open the project"}),"\n",(0,l.jsxs)(t.li,{children:["Navigate to the ",(0,l.jsx)(t.code,{children:"Solutions"})," tab"]}),"\n",(0,l.jsxs)(t.li,{children:["Click ",(0,l.jsx)(t.code,{children:"Run"})," on the ",(0,l.jsx)(t.code,{children:"helloworld.solution.yaml"})," entry"]}),"\n"]}),"\n",(0,l.jsx)(d.A,{caption:"Generating code",src:"/img/apigear-studio-generate-code.png"})]})}function p(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,l.jsx)(t,{...e,children:(0,l.jsx)(u,{...e})}):u(e)}}}]);