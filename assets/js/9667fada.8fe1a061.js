"use strict";(self.webpackChunkapigear=self.webpackChunkapigear||[]).push([[3917],{91300:e=>{e.exports=JSON.parse('{"version":{"pluginId":"template-cpp17","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"defaultSidebar":[{"type":"link","label":"Template C++ 17","href":"/template-cpp17/docs/intro","docId":"intro","unlisted":false},{"type":"link","label":"Quick-Start","href":"/template-cpp17/docs/quickstart/","docId":"quickstart/index","unlisted":false},{"type":"category","label":"Features","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"API Feature","href":"/template-cpp17/docs/features/api","docId":"features/api","unlisted":false},{"type":"link","label":"Stubs","href":"/template-cpp17/docs/features/stubs","docId":"features/stubs","unlisted":false},{"type":"link","label":"MQTT","href":"/template-cpp17/docs/features/mqtt","docId":"features/mqtt","unlisted":false},{"type":"link","label":"Olink","href":"/template-cpp17/docs/features/olink","docId":"features/olink","unlisted":false},{"type":"link","label":"Monitor","href":"/template-cpp17/docs/features/monitor","docId":"features/monitor","unlisted":false},{"type":"link","label":"Conan package manager","href":"/template-cpp17/docs/features/conan","docId":"features/conan","unlisted":false}],"href":"/template-cpp17/docs/features/"}]},"docs":{"features/api":{"id":"features/api","title":"API Feature","description":"The feature api is the bare minimum for code generation. The feature will generate:","sidebar":"defaultSidebar"},"features/conan":{"id":"features/conan","title":"Conan package manager","description":"With this feature you we generate a conan support for your project. It helps with packaging and to managing dependencies for different platforms, OSs, compilers, architecture, cross-builds. Read more about conan and its all benefits here.","sidebar":"defaultSidebar"},"features/features":{"id":"features/features","title":"Features","description":"This guide explains how to use the generated code, what are the available features and their benefits.","sidebar":"defaultSidebar"},"features/monitor":{"id":"features/monitor","title":"Monitor","description":"Use the monitor feature to examine the interface calls, state and signals during runtime. With this feature you obtain a monitor client and a monitored version of your interfaces. The monitoring server is embedded into the ApiGear Studio and CLI version.","sidebar":"defaultSidebar"},"features/mqtt":{"id":"features/mqtt","title":"MQTT","description":"This is an experimental feature. It contains the smallest working set of functionalities to adapt the generated interface for use with the MQTT protocol.","sidebar":"defaultSidebar"},"features/olink":{"id":"features/olink","title":"Olink","description":"This feature provides a client and a server adapter for your interfaces for the ObjectLink protocol. It allows you to connect different applications using the same or different technologies (check all of our templates).","sidebar":"defaultSidebar"},"features/stubs":{"id":"features/stubs","title":"Stubs","description":"The feature stubs adds:","sidebar":"defaultSidebar"},"intro":{"id":"intro","title":"Template C++ 17","description":"This is the documentation for the cpp17 template for the ApiGear code generator.","sidebar":"defaultSidebar"},"quickstart/index":{"id":"quickstart/index","title":"Quick-Start","description":"The Quick-Start guide explains how in a few steps you get from an API definition to a functional c++ example.","sidebar":"defaultSidebar"}}}}')}}]);