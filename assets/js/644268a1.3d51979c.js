"use strict";(self.webpackChunkapigear=self.webpackChunkapigear||[]).push([[8843],{4010:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>l,contentTitle:()=>s,default:()=>h,frontMatter:()=>r,metadata:()=>a,toc:()=>c});var i=o(4848),t=o(8453);const r={sidebar_position:3},s="API Monitoring",a={id:"cli/monitor",title:"API Monitoring",description:"API Monitoring is a feature that allows you to monitor the behavior of an API. This is useful for testing, demonstration, and development. It decouples the interface implementation from the interface users.",source:"@site/docs/cli/monitor.md",sourceDirName:"cli",slug:"/cli/monitor",permalink:"/docs/cli/monitor",draft:!1,unlisted:!1,editUrl:"https://github.com/apigear-io/apigear-docs/edit/main/docs/cli/monitor.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"docsSidebar",previous:{title:"Code Generation",permalink:"/docs/cli/generate"},next:{title:"API Simulation",permalink:"/docs/cli/simulate"}},l={},c=[{value:"Quick API Monitoring",id:"quick-api-monitoring",level:2}];function d(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"api-monitoring",children:"API Monitoring"})}),"\n",(0,i.jsx)(n.p,{children:"API Monitoring is a feature that allows you to monitor the behavior of an API. This is useful for testing, demonstration, and development. It decouples the interface implementation from the interface users."}),"\n",(0,i.jsx)(n.h2,{id:"quick-api-monitoring",children:"Quick API Monitoring"}),"\n",(0,i.jsxs)(n.p,{children:["API Monitoring is a feature of the ApiGear platform. It allows to monitor the traffic of an API. The ",(0,i.jsx)(n.code,{children:"apigear"})," command line tool can be used to monitor an API. The following example shows how to monitor the demo API."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"apigear monitor run\n"})}),"\n",(0,i.jsxs)(n.p,{children:["This will start the API monitoring server. The server will listen on port 5555. To change the port use the ",(0,i.jsx)(n.code,{children:"--port"})," option."]}),"\n",(0,i.jsxs)(n.p,{children:["The monitoring server will listen for API calls. Normally the API events will come from a running API client. It is also possible to feed API events using the ",(0,i.jsx)(n.code,{children:"feed"})," command."]}),"\n",(0,i.jsxs)(n.p,{children:["The following example shows how to feed API event to the monitor using a new line delimited json document (",(0,i.jsx)(n.code,{children:"NDJSON"}),")."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'// demo.ndjson\n{ "id": "1", "kind": "call", "symbol": "demo.Counter/increment" }\n{ "id": "2", "kind": "state", "symbol": "demo.Counter", "props": { "count": 99 } } }\n'})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"apigear monitor feed demo.ndjson\n"})}),"\n",(0,i.jsx)(n.p,{children:"This will send the API calls to the monitoring server. The monitoring server will print the API calls to the console."}),"\n",(0,i.jsx)(n.admonition,{type:"tip",children:(0,i.jsx)(n.p,{children:"Currently the monitoring server does not store the API calls. This will be added in a future release with a playback feature."})})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,o)=>{o.d(n,{R:()=>s,x:()=>a});var i=o(6540);const t={},r=i.createContext(t);function s(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);